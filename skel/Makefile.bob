# Ian Dennis Miller
# project-management skeleton makefile

PROJECT_NAME={{{project_name}}}
PANDOC=pandoc -f markdown -t html --toc --template assets/www/template.html -c assets/www/ryangray-style.css -c assets/www/style.css -s --self-contained

all: zip pdf docx presentations html
	@echo done

paths:
	mkdir -p \
		output/agile \
		output/design \
		output/compliance \
		output/itops \
		output/spec \
		output/usage \
		output/products

graffles: paths
	# Organization View
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/agile/$(PROJECT_NAME) Organization View.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/agile/$(PROJECT_NAME) Organization View.pdf"

	convert "output/agile/$(PROJECT_NAME) Organization View.pdf" \
		"output/agile/$(PROJECT_NAME) Organization View.png"

	# Team Resources
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/agile/$(PROJECT_NAME) Team Resources Diagram.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/agile/$(PROJECT_NAME) Team Resources Diagram.pdf"

	# Entity Relationship Diagram
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/design/$(PROJECT_NAME) Entity Relationship Diagram.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/design/$(PROJECT_NAME) Entity Relationship Diagram.pdf"

	# Process Map
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/design/$(PROJECT_NAME) Process Map.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/design/$(PROJECT_NAME) Process Map.pdf"

	# Site Map
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/design/$(PROJECT_NAME) Site Map.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/design/$(PROJECT_NAME) Site Map.pdf"

	# System Map
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/design/$(PROJECT_NAME) System Map.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/design/$(PROJECT_NAME) System Map.pdf"

	# Wireframes
	osascript $$PWD/assets/script/omnigraffle-export.applescript "$$PWD/docs/design/$(PROJECT_NAME) Wireframes.graffle" /tmp/tmp.pdf pdf && mv /tmp/tmp.pdf "output/design/$(PROJECT_NAME) Wireframes.pdf"

outlines: paths
	# Checklist
	osascript $$PWD/assets/script/omnioutliner-export.applescript \
		"$$PWD/docs/agile/$(PROJECT_NAME) Checklist.oo3" /tmp/tmp.rtf "public.rtf" && \
		textutil -convert docx /tmp/tmp.rtf -output /tmp/tmp.docx && \
		pandoc --latex-engine=xelatex -o /tmp/tmp.pdf /tmp/tmp.docx && \
		mv /tmp/tmp.pdf "output/agile/$(PROJECT_NAME) Checklist.pdf" && \
		mv /tmp/tmp.docx "output/assets/docx/$(PROJECT_NAME) Checklist.docx"

plans: paths
	# Timeline
	osascript $$PWD/assets/script/omniplan-export.applescript \
		"$$PWD/docs/agile/$(PROJECT_NAME) Timeline.oplx" /tmp/plan.pdf PDF && \
		mv /tmp/plan.pdf "output/agile/$(PROJECT_NAME) Timeline.pdf"
	convert "output/agile/$(PROJECT_NAME) Timeline.pdf" \
		"output/agile/$(PROJECT_NAME) Timeline.png"

html: paths
	$(PANDOC) -o "output/Project Guide.html" "docs/Project Guide.md"

	$(PANDOC) -o "output/agile/Charter.html" "docs/agile/Charter.md"
	$(PANDOC) -o "output/agile/Agile Management Plan.html" "docs/agile/Agile Management Plan.md"
	$(PANDOC) -o "output/agile/Scope.html" "docs/agile/Scope.md"

	$(PANDOC) -o "output/compliance/Risks Register.html" "docs/compliance/Risks Register.md"
	$(PANDOC) -o "output/compliance/Hazards Register.html" "docs/compliance/Hazards Register.md"
	$(PANDOC) -o "output/compliance/Tests Register.html" "docs/compliance/Tests Register.md"
	$(PANDOC) -o "output/compliance/Requirements.html" "docs/compliance/Requirements.md"
	$(PANDOC) -o "output/compliance/Mitigations Register.html" "docs/compliance/Mitigations Register.md"
	$(PANDOC) -o "output/compliance/Security.html" "docs/compliance/Security.md"

	$(PANDOC) -o "output/itops/Installation.html" "docs/itops/Installation.md"
	$(PANDOC) -o "output/itops/Upgrading.html" "docs/itops/Upgrading.md"

	$(PANDOC) -o "output/spec/Data Model Specification.html" "docs/spec/Data Model Specification.md"
	$(PANDOC) -o "output/spec/Functional Specification.html" "docs/spec/Functional Specification.md"
	$(PANDOC) -o "output/spec/Technical Specification.html" "docs/spec/Technical Specification.md"

	$(PANDOC) -o "output/usage/Admin Guide.html" "docs/usage/Admin Guide.md"
	$(PANDOC) -o "output/usage/User Guide.html" "docs/usage/User Guide.md"

	# cp -r assets output
	cp assets/www/unimplemented.html output/unimplemented.html
	cp assets/www/index.html output

zip: paths
	@echo "Zips"

	# Entity Relationship Diagram
	zip -r "output/design/$(PROJECT_NAME) Entity Relationship Diagram.zip" \
		"docs/design/$(PROJECT_NAME) Entity Relationship Diagram.graffle"

	# Wireframes
	zip -r "output/design/$(PROJECT_NAME) Wireframes.zip" \
		"docs/design/$(PROJECT_NAME) Wireframes.graffle"

	# Process Map
	zip -r "output/design/$(PROJECT_NAME) Process Map.zip" \
		"docs/design/$(PROJECT_NAME) Process Map.graffle"

	# System Map
	zip -r "output/design/$(PROJECT_NAME) System Map.zip" \
		"docs/design/$(PROJECT_NAME) System Map.graffle"

	# Site Map
	zip -r "output/design/$(PROJECT_NAME) Site Map.zip" \
		"docs/design/$(PROJECT_NAME) Site Map.graffle"

	# Team Resources Diagram
	zip -r "output/agile/$(PROJECT_NAME) Team Resources Diagram.zip" \
		"docs/agile/$(PROJECT_NAME) Team Resources Diagram.graffle"

	# Organization View
	zip -r "output/agile/$(PROJECT_NAME) Organization View.zip" \
		"docs/agile/$(PROJECT_NAME) Organization View.graffle"

	# Checklist
	zip -r "output/agile/$(PROJECT_NAME) Checklist.zip" \
		"docs/agile/$(PROJECT_NAME) Checklist.oo3"

	# Timeline
	zip -r "output/agile/$(PROJECT_NAME) Timeline.zip" \
		"docs/agile/$(PROJECT_NAME) Timeline.oplx"

pdf: paths plans graffles
	# combine project documentation
	pandoc -f markdown -t latex --toc -o /tmp/project.pdf \
		"docs/agile/Charter.md" \
		"docs/agile/Scope.md" \
		"docs/spec/Data Model Specification.md" \
		"docs/spec/Functional Specification.md" \
		"docs/spec/Technical Specification.md" \
		"docs/compliance/Requirements.md" \
		"docs/compliance/Tests Register.md" \
		"docs/compliance/Risks Register.md" \
		"docs/compliance/Hazards Register.md" \
		"docs/compliance/Mitigations Register.md" \
		"docs/compliance/Security.md" \
		"docs/itops/Installation.md" \
		"docs/itops/Upgrading.md" \
		"docs/usage/Admin Guide.md" \
		"docs/usage/User Guide.md" \
		"docs/agile/Agile Management Plan.md"

	# combine project assets
	pdfjam --landscape -o "/tmp/assets.pdf" \
		"output/agile/$(PROJECT_NAME) Organization View.pdf" \
		"output/agile/$(PROJECT_NAME) Team Resources Diagram.pdf" \
		"output/agile/$(PROJECT_NAME) Timeline.pdf" \
		"output/design/$(PROJECT_NAME) Entity Relationship Diagram.pdf" \
		"output/design/$(PROJECT_NAME) Process Map.pdf" \
		"output/design/$(PROJECT_NAME) Site Map.pdf" \
		"output/design/$(PROJECT_NAME) System Map.pdf" \
		"output/design/$(PROJECT_NAME) Wireframes.pdf"


	# make a single document
	pdfjam --rotateoversize true -o "output/products/$(PROJECT_NAME) Project.pdf" \
		/tmp/project.pdf \
		/tmp/assets.pdf

	# Charter
	pandoc -f markdown -t latex --toc -o "output/agile/$(PROJECT_NAME) Charter.pdf" "docs/agile/Charter.md"

	# Agile Management Plan
	pandoc -f markdown -t latex --toc -o "output/agile/Agile Management Plan.pdf" "docs/agile/Agile Management Plan.md"

	# Scope
	pandoc -f markdown -t latex --toc -o /tmp/Scope.pdf \
		"docs/agile/Scope.md"

	pdfjam -o "output/agile/$(PROJECT_NAME) Scope.pdf" \
		/tmp/Scope.pdf \
		"output/agile/$(PROJECT_NAME) Organization View.pdf" \
		"output/agile/$(PROJECT_NAME) Timeline.pdf"

	# clean up
	rm /tmp/project.pdf /tmp/assets.pdf

	# Requirements
	pandoc -f markdown -t latex --toc -o "output/compliance/$(PROJECT_NAME) Requirements.pdf" "docs/compliance/Requirements.md"

	# Tests Register
	pandoc -f markdown -t latex --toc -o "output/compliance/$(PROJECT_NAME) Tests Register.pdf" "docs/compliance/Tests Register.md"

	# Hazards Register
	pandoc -f markdown -t latex --toc -o "output/compliance/$(PROJECT_NAME) Hazards Register.pdf" "docs/compliance/Hazards Register.md"

	# Mitigations Register
	pandoc -f markdown -t latex --toc -o "output/compliance/$(PROJECT_NAME) Mitigations Register.pdf" "docs/compliance/Mitigations Register.md"

	# Risks Register
	pandoc -f markdown -t latex --toc -o "output/compliance/$(PROJECT_NAME) Risks Register.pdf" "docs/compliance/Risks Register.md"

	# Security
	pandoc -f markdown -t latex --toc -o "output/compliance/$(PROJECT_NAME) Security.pdf" "docs/compliance/Security.md"

	# Installation
	pandoc -f markdown -t latex --toc -o "output/itops/$(PROJECT_NAME) Installation.pdf" "docs/itops/Installation.md"

	# Upgrading
	pandoc -f markdown -t latex --toc -o "output/itops/$(PROJECT_NAME) Upgrading.pdf" "docs/itops/Upgrading.md"

	# Data Model Specification
	pandoc -f markdown -t latex --toc -o "output/spec/$(PROJECT_NAME) Data Model Specification.pdf" "docs/spec/Data Model Specification.md"

	# Functional Specification
	pandoc -f markdown -t latex --toc -o "output/spec/$(PROJECT_NAME) Functional Specification.pdf" "docs/spec/Functional Specification.md"

	# Technical Specification
	pandoc -f markdown -t latex --toc -o "output/spec/$(PROJECT_NAME) Technical Specification.pdf" "docs/spec/Technical Specification.md"

	# Admin Guide
	pandoc -f markdown -t latex --toc -o "output/usage/$(PROJECT_NAME) Admin Guide.pdf" "docs/usage/Admin Guide.md"

	# User Guide
	pandoc -f markdown -t latex --toc -o "output/usage/$(PROJECT_NAME) User Guide.pdf" "docs/usage/User Guide.md"

docx: paths
	# Charter
	pandoc -f markdown -t docx --toc -o "output/agile/$(PROJECT_NAME) Charter.docx" "docs/agile/Charter.md"

	# Scope
	pandoc -f markdown -t docx --toc -o "output/agile/$(PROJECT_NAME) Scope.docx" "docs/agile/Scope.md"

	# Agile Management Plan
	pandoc -f markdown -t docx --toc -o "output/agile/Agile Management Plan.docx" "docs/agile/Agile Management Plan.md"

	# Requirements
	pandoc -f markdown -t docx --toc -o "output/compliance/$(PROJECT_NAME) Requirements.docx" "docs/compliance/Requirements.md"

	# Tests Register
	pandoc -f markdown -t docx --toc -o "output/compliance/$(PROJECT_NAME) Tests Register.docx" "docs/compliance/Tests Register.md"

	# Hazards Register
	pandoc -f markdown -t docx --toc -o "output/compliance/$(PROJECT_NAME) Hazards Register.docx" "docs/compliance/Hazards Register.md"

	# Mitigations Register
	pandoc -f markdown -t docx --toc -o "output/compliance/$(PROJECT_NAME) Mitigations Register.docx" "docs/compliance/Mitigations Register.md"

	# Risks Register
	pandoc -f markdown -t docx --toc -o "output/compliance/$(PROJECT_NAME) Risks Register.docx" "docs/compliance/Risks Register.md"

	# Security
	pandoc -f markdown -t docx --toc -o "output/compliance/$(PROJECT_NAME) Security.docx" "docs/compliance/Security.md"

	# Installation
	pandoc -f markdown -t docx --toc -o "output/itops/$(PROJECT_NAME) Installation.docx" "docs/itops/Installation.md"

	# Upgrading
	pandoc -f markdown -t docx --toc -o "output/itops/$(PROJECT_NAME) Upgrading.docx" "docs/itops/Upgrading.md"

	# Data Model Specification
	pandoc -f markdown -t docx --toc -o "output/spec/$(PROJECT_NAME) Data Model Specification.docx" "docs/spec/Data Model Specification.md"

	# Functional Specification
	pandoc -f markdown -t docx --toc -o "output/spec/$(PROJECT_NAME) Functional Specification.docx" "docs/spec/Functional Specification.md"

	# Technical Specification
	pandoc -f markdown -t docx --toc -o "output/spec/$(PROJECT_NAME) Technical Specification.docx" "docs/spec/Technical Specification.md"

	# Admin Guide
	pandoc -f markdown -t docx --toc -o "output/usage/$(PROJECT_NAME) Admin Guide.docx" "docs/usage/Admin Guide.md"

	# User Guide
	pandoc -f markdown -t docx --toc -o "output/usage/$(PROJECT_NAME) User Guide.docx" "docs/usage/User Guide.md"

	# complete project documentation
	pandoc -f markdown -t docx --toc -o "output/products/$(PROJECT_NAME) Project.docx" \
		"docs/agile/Charter.md" \
		"docs/agile/Agile Management Plan.md" \
		"docs/agile/Scope.md" \
		"docs/compliance/Risks Register.md" \
		"docs/compliance/Requirements.md" \
		"docs/compliance/Tests Register.md" \
		"docs/compliance/Hazards Register.md" \
		"docs/compliance/Mitigations Register.md" \
		"docs/compliance/Security.md" \
		"docs/itops/Installation.md" \
		"docs/itops/Upgrading.md" \
		"docs/spec/Data Model Specification.md" \
		"docs/spec/Functional Specification.md" \
		"docs/spec/Technical Specification.md" \
		"docs/usage/Admin Guide.md" \
		"docs/usage/User Guide.md"

presentations: paths
	# Charter
	pandoc -t beamer docs/agile/Charter.md -o "output/agile/$(PROJECT_NAME) Charter Presentation.pdf"

	# Agile Management Plan
	pandoc -t beamer "docs/agile/Agile Management Plan.md" -o "output/agile/Agile Management Plan Presentation.pdf"

	# Project Guide
	pandoc -t beamer "docs/Project Guide.md" -o "output/products/$(PROJECT_NAME) Project Guide Presentation.pdf"

	# Scope
	pandoc -t beamer "docs/agile/Scope.md" -o "output/agile/$(PROJECT_NAME) Scope Presentation.pdf"

clean:
	rm -rf output
	mkdir output

.PHONY: all clean docs pdf presentation docx outlines zip plans graffles paths
